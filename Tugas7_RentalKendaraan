public class Vehicle {
    private int id;
    private String type;
    private String brand;
    private int pricePerDay;
    private boolean availability;

    public Vehicle(int id, String type, String brand, int pricePerDay, boolean availability) {
        this.id = id;
        this.type = type;
        this.brand = brand;
        this.pricePerDay = pricePerDay;
        this.availability = availability;
    }

    public String displayInfo() {
        return id + ". " + brand + " (" + type + ") - Rp" + pricePerDay + "/hari | Tersedia: " + availability;
    }

    public int rent(int days) {
        if (availability) {
            availability = false;
            return days * pricePerDay;
        }
        return -1;
    }

    public void returnVehicle() {
        availability = true;
    }

    public int getId() {
        return id;
    }

    public boolean isAvailable() {
        return availability;
    }
}

// Class Rental
public class Rental {
    private String customerName;
    private Vehicle vehicle;
    private int rentalDays;
    private int totalPrice;

    public Rental(String customerName, Vehicle vehicle, int rentalDays, int totalPrice) {
        this.customerName = customerName;
        this.vehicle = vehicle;
        this.rentalDays = rentalDays;
        this.totalPrice = totalPrice;
    }

    public String displayInfo() {
        return customerName + " menyewa " + vehicle.displayInfo() + " selama " + rentalDays + " hari | Total: Rp" + totalPrice;
    }
}

// Class RentalSystem
import java.util.ArrayList;

public class RentalSystem {
    private ArrayList<Vehicle> vehicles;
    private ArrayList<Rental> rentals;

    public RentalSystem() {
        vehicles = new ArrayList<>();
        rentals = new ArrayList<>();
    }

    public void addVehicle(int id, String type, String brand, int pricePerDay, boolean availability) {
        vehicles.add(new Vehicle(id, type, brand, pricePerDay, availability));
    }

    public void showVehicles() {
        System.out.println("Daftar Kendaraan:");
        for (Vehicle vehicle : vehicles) {
            System.out.println(vehicle.displayInfo());
        }
    }

    public void rentVehicle(int vehicleId, String customerName, int rentalDays) {
        for (Vehicle vehicle : vehicles) {
            if (vehicle.getId() == vehicleId && vehicle.isAvailable()) {
                int totalPrice = vehicle.rent(rentalDays);
                rentals.add(new Rental(customerName, vehicle, rentalDays, totalPrice));
                System.out.println("Transaksi berhasil. Total Harga: Rp" + totalPrice);
                return;
            }
        }
        System.out.println("Kendaraan tidak tersedia atau ID tidak ditemukan.");
    }

    public void returnVehicle(int vehicleId) {
        for (Vehicle vehicle : vehicles) {
            if (vehicle.getId() == vehicleId && !vehicle.isAvailable()) {
                vehicle.returnVehicle();
                System.out.println("Kendaraan " + vehicle.displayInfo() + " telah dikembalikan.");
                return;
            }
        }
        System.out.println("Kendaraan tidak ditemukan.");
    }

    public void showRentals() {
        System.out.println("Daftar Transaksi:");
        for (Rental rental : rentals) {
            System.out.println(rental.displayInfo());
        }
    }
}

// Class Main
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        RentalSystem rentalSystem = new RentalSystem();
        rentalSystem.addVehicle(1, "Mobil", "Toyota Avanza", 350000, true);
        rentalSystem.addVehicle(2, "Motor", "Yamaha Nmax", 100000, true);

        rentalSystem.showVehicles();

        System.out.print("Masukkan ID Kendaraan yang ingin disewa: ");
        int vehicleId = scanner.nextInt();
        scanner.nextLine();
        System.out.print("Masukkan Nama Penyewa: ");
        String customerName = scanner.nextLine();
        System.out.print("Masukkan Jumlah Hari Sewa: ");
        int rentalDays = scanner.nextInt();

        rentalSystem.rentVehicle(vehicleId, customerName, rentalDays);

        rentalSystem.showRentals();

        System.out.print("Masukkan ID Kendaraan yang ingin dikembalikan: ");
        int returnId = scanner.nextInt();
        rentalSystem.returnVehicle(returnId);

        rentalSystem.showVehicles();

        scanner.close();
    }
}
